# Generated by Django 2.2.11 on 2020-04-11 09:16

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_frequentaskedquestion'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_iid', models.AutoField(primary_key=True, serialize=False)),
                ('device_id', models.CharField(help_text='Identificador del Dispositivo', max_length=128, unique=True, verbose_name='Id Dispositivo')),
                ('ua_string', models.CharField(blank=True, help_text='User Agent', max_length=512, null=True, verbose_name='User Agent')),
                ('status', models.CharField(default='ACTIVE', help_text='Estado del Dispositivo', max_length=32, verbose_name='Estado')),
                ('dev_brand', models.CharField(blank=True, help_text='Marca del Dispositivo', max_length=128, null=True, verbose_name='Marca')),
                ('dev_family', models.CharField(blank=True, help_text='Familia del Dispositivo', max_length=128, null=True, verbose_name='Familia')),
                ('dev_model', models.CharField(blank=True, help_text='Modelo del Dispositivo', max_length=128, null=True, verbose_name='Modelo')),
                ('os_family', models.CharField(blank=True, help_text='Sistema Operativo', max_length=128, null=True, verbose_name='SO')),
                ('os_version', models.CharField(blank=True, help_text='Versión del Sistema Operativo', max_length=32, null=True, verbose_name='Version SO')),
                ('browser_family', models.CharField(blank=True, help_text='Navegador del User Agent', max_length=64, null=True, verbose_name='Navegador')),
                ('browser_version', models.CharField(blank=True, help_text='Versión del Navegador del User Agent', max_length=32, null=True, verbose_name='Version Navegador')),
                ('created', models.DateTimeField(auto_now=True, help_text='Fecha de Creación del Dispositivo', verbose_name='Creado')),
                ('last_seen', models.DateTimeField(auto_now_add=True, help_text='Última Visita del Dispositivo', verbose_name='Última Visita')),
                ('created_ip_address', models.CharField(blank=True, help_text='Dirección IP desde la que fue creado', max_length=32, null=True, verbose_name='IP de creación')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_iid', models.AutoField(primary_key=True, serialize=False)),
                ('user_type', models.CharField(help_text='Tipo de usuario', max_length=32, verbose_name='Tipo')),
                ('user_value', models.CharField(help_text='Valor/Nombre de Usuario', max_length=128, verbose_name='Sujeto')),
                ('name', models.CharField(blank=True, help_text='Nombre Completo del Usuario', max_length=512, null=True, verbose_name='Nombre Completo')),
                ('email', models.CharField(blank=True, help_text='Correo Electrónico del Usuario', max_length=256, null=True, verbose_name='Correo Electrónico')),
                ('phone', models.CharField(blank=True, help_text='Número Telefónico del Usuario', max_length=64, null=True, verbose_name='Teléfono')),
                ('created', models.DateTimeField(auto_now=True, help_text='Fecha de Creación del Dispositivo', verbose_name='Creado')),
                ('last_seen', models.DateTimeField(auto_now_add=True, help_text='Última Visita del Dispositivo', verbose_name='Última Visita')),
                ('created_ip_address', models.CharField(blank=True, help_text='Dirección IP desde la que fue creado', max_length=32, null=True, verbose_name='IP de creación')),
                ('address', models.CharField(blank=True, help_text='Dirección por defecto del Usuario', max_length=400, null=True, verbose_name='Dirección')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='Ubicación por defecto del Usuario', null=True, srid=4326, verbose_name='Ubicación')),
                ('city', models.CharField(blank=True, help_text='Dirección por defecto del Usuario', max_length=30, null=True, verbose_name='Ciudad')),
                ('city_code', models.CharField(blank=True, help_text='Código de Ciudad por Defecto del Usuario', max_length=30, null=True, verbose_name='Código Ciudad')),
                ('password_hash', models.CharField(blank=True, help_text='Contraseña del Usuario', max_length=64, null=True, verbose_name='Password')),
                ('password_salt', models.CharField(blank=True, help_text='Salt de Contraseña del Usuario', max_length=64, null=True, verbose_name='Password Salta')),
            ],
        ),
        migrations.AlterField(
            model_name='helprequest',
            name='address',
            field=models.CharField(help_text='Para ayudar a quien quiera ayudarte saber la dirección, ciudad, barrio, referencias, o cómo llegar', max_length=400, null=True, verbose_name='Dirección'),
        ),
        migrations.AlterField(
            model_name='helprequest',
            name='message',
            field=models.TextField(db_index=True, help_text='Acá podés contar detalladamente lo que necesitás, <b>cuanto mejor cuentes tu situación es más probable que te quieran ayudar</b>', max_length=2000, null=True, verbose_name='Descripción del pedido'),
        ),
        migrations.AlterField(
            model_name='helprequest',
            name='title',
            field=models.CharField(db_index=True, help_text='Descripción corta de qué estás necesitando', max_length=200, verbose_name='Título del pedido'),
        ),
        migrations.AlterField(
            model_name='status',
            name='code',
            field=models.CharField(help_text='Código del estado', max_length=10, primary_key=True, serialize=False, verbose_name='Código del estado'),
        ),
        migrations.CreateModel(
            name='HelpRequestOwner',
            fields=[
                ('help_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.HelpRequest')),
                ('user_iid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User')),
            ],
        ),
    ]
